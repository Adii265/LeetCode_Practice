/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

int depth(TreeNode * root)
{
    if(root == NULL)
        return 0;
    int left = depth(root->left);
    int right = depth(root->right);
    if(left<right)
        return 1 + right;
    else
        return 1+left;
}
class Solution {
public:
    int diameterOfBinaryTree(TreeNode* root)
    {
        if(root==NULL)
            return 0;
        int l = diameterOfBinaryTree(root->left);
        int r = diameterOfBinaryTree(root->right);
        return max(max(l,r),depth(root->left)+depth(root->right));
    }
};
