//C++

class Solution {
public:
    int maxProfit(vector<int>& p) {
        if(p.size() == 1)
            return 0;
        int dp[p.size()];
        int ans = 0;
        dp[0] = 0;
        for(int i = 1;i<p.size();i++)
        {
            dp[i] = max(p[i]-p[i-1],0);
            if(dp[i]!=0)
                ans+=dp[i];
        }
        return ans;
    }
};


//Java
class Solution {
    public int maxProfit(int[] prices) 
    {
        int max_profit = 0;
        for(int i = 0; i< prices.length - 1; i ++)
        {
            if(prices[i] < prices[i+1])
            {
                max_profit += prices[i+1] - prices[i];
            }
        }
        return max_profit;
    }
}